parameters {
    choice(name: 'LANGUAGE', choices: ['Java', 'Python'], description: 'Select the language of your application')
    string(name: 'DOCKERFILE', defaultValue: 'Dockerfile', description: 'Enter the name of your Dockerfile')
    string(name: 'IMAGE_NAME', defaultValue: 'my-app', description: 'Enter the name of your Docker image')
}

pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                sh 'docker build -t ${IMAGE_NAME} -f ${DOCKERFILE} .'
            }
        }
        stage('test') {
            steps {
                if (params.LANGUAGE == 'Java') {
                    sh 'mvn clean package'
                } else if (params.LANGUAGE == 'Python') {
                    sh 'python setup.py sdist bdist_wheel'
                }
            }
        stage('Unit Test') {
             when {
                expression { params.RUN_TESTS == true }
            }
            steps {
                if (params.LANGUAGE == 'Java') {
                    sh 'mvn test'
                } else if (params.LANGUAGE == 'Python') {
                    sh 'pytest'
                }
            }
        }
        stage('Code Quality') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'mvn sonar:sonar' // for Java projects
                    sh 'sonar-scanner' // for Python projects
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ${IMAGE_NAME} -f ${DOCKERFILE} .'
            }
        }
        
        
    }
}
}
